# Generated by Django 5.1 on 2024-08-15 09:41

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnneeAcademique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'Année académique',
                'verbose_name_plural': 'Les années académiques',
                'ordering': ['-libelle'],
            },
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'La classe',
                'verbose_name_plural': 'Les classes',
                'ordering': ['-libelle'],
            },
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_de_naissance', models.DateField()),
                ('adresse', models.CharField(blank=True, max_length=255, null=True)),
                ('telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('quartier', models.CharField(max_length=30)),
                ('ville', models.CharField(max_length=30)),
                ('groups', models.ManyToManyField(blank=True, related_name='etudiant_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='etudiant_permissions_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'Étudiant(e)',
                'verbose_name_plural': 'Les étudiants',
                'ordering': ['-first_name', '-last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_inscription', models.DateTimeField(auto_now=True)),
                ('annee_academique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscription.anneeacademique')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscription.classe')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscription.etudiant')),
            ],
            options={
                'verbose_name': 'Inscription',
                'verbose_name_plural': 'Les inscriptions',
                'ordering': ['-date_inscription', '-date_inscription', 'classe'],
                'unique_together': {('annee_academique', 'etudiant', 'classe')},
            },
        ),
        migrations.CreateModel(
            name='MontantAttenduInscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('annee_academique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscription.anneeacademique')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscription.classe')),
            ],
            options={
                'verbose_name': 'Montant attendu par inscription',
                'verbose_name_plural': 'Les montants attendus par inscription',
                'ordering': ['-annee_academique', '-classe'],
            },
        ),
        migrations.CreateModel(
            name='MontantAttenduSemestre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semestre', models.CharField(choices=[('s1', 'SEMESTRE 1'), ('s2', 'SEMESTRE 2')], max_length=2)),
                ('montant', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('annee_academique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscription.anneeacademique')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscription.classe')),
            ],
            options={
                'verbose_name': 'Montant attendu par semestre',
                'verbose_name_plural': 'Les montants attendus par semestre',
                'ordering': ['-semestre', '-annee_academique'],
            },
        ),
        migrations.CreateModel(
            name='PaiementInscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_versement', models.DateTimeField(auto_now_add=True)),
                ('montant_versement', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('inscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscription.inscription')),
                ('montant_attendu_inscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscription.montantattenduinscription')),
            ],
            options={
                'verbose_name': 'Paiement effectué par inscription',
                'verbose_name_plural': 'Les paiements effectués par inscription',
                'ordering': ['-date_versement', '-inscription'],
            },
        ),
        migrations.CreateModel(
            name='PaiementSemestre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_versement', models.DateTimeField(auto_now_add=True)),
                ('montant_versement', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('inscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscription.inscription')),
                ('montant_attendu_semestre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscription.montantattendusemestre')),
            ],
            options={
                'verbose_name': 'Paiement effectué par semestre',
                'verbose_name_plural': 'Les paiements effectués par semestre',
                'ordering': ['-date_versement', '-inscription'],
            },
        ),
    ]
